name: 'dbt_with_udf_example'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_with_udf_example'

# These configurations specify where dbt should look for different types of files.
# For Databricks asset bundles, we put everything in src, as you may have
# non-dbt resources in your project.
model-paths: ["src/models"]
analysis-paths: ["src/analyses"]
test-paths: ["src/tests"]
seed-paths: ["src/seeds"]
macro-paths: ["src/macros"]
snapshot-paths: ["src/snapshots"]

clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

vars:
  pyudfs:
   percentage_increase:
    args:
      - name: a
        type: DOUBLE
      - name: b
        type: DOUBLE
    returns: DOUBLE
    whl_path: "pyudf/udf_py-0.1.0-py3-none-any.whl"
    package_name: udf
    module_name: helpers

  sqludfs:
    can_access_plant: # Row filter
      args:
        - name: plant_id
          type: STRING
      returns: BOOLEAN
      sql_stmt: |
        EXISTS (
          SELECT 1
          FROM $CATALOG.$SCHEMA.user_plant_acl acl
          WHERE (acl.principal = current_user() OR is_account_group_member(acl.principal))
            AND (acl.plant_id = plant_id OR acl.plant_id = '*')
        )
    mask_email:
      args:
        - name: email
          type: STRING
      returns: STRING
      sql_stmt: |
        CASE
          WHEN instr(email, '@') = 0 THEN NULL
          ELSE concat(
                -- first character of username
                substr(split_part(email, '@', 1), 1, 1),
                -- middle stars (0 if username length < 2)
                repeat('*', greatest(length(split_part(email, '@', 1)) - 2, 0)),
                -- last character of username (empty if username empty)
                substr(split_part(email, '@', 1), length(split_part(email, '@', 1)), 1),
                '@',
                -- domain is whatever remains after the first '@'
                split_part(email, '@', 2)
              )
        END

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views by default. These settings can be overridden in the
# individual model files using the `{{ config(...) }}` macro.
models:
  dbt_with_udf_example:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view
